ðŸ”‘ Summary of Promise Combinators

Promise.all â†’ Waits for all success, fails fast on first rejection.

Promise.allSettled â†’ Waits for all, gives results of both success/fail.

Promise.race â†’ First settled (resolve or reject) decides outcome.

Promise.any â†’ First success wins, fails only if all reject.


ðŸ”‘ Key Concept

Promise.all([p1, p2, ...]) runs all Promises in parallel.

It waits until all are resolved.

If even one rejects, the whole thing rejects immediately.



ðŸ”¹ Promise.any()

Similar to Promise.race, but it only cares about the first successful (fulfilled) promise.

If all promises fail, it rejects with an AggregateError (special error containing all the reasons).


ðŸ”¹ 2. Promise.allSettled()

This waits for all promises to finish, no matter if they resolve or reject.
It returns an array of objects with {status, value} or {status, reason}.